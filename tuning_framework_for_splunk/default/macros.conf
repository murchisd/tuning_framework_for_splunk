[tf_time_based_suppression(1)]
definition = | search NOT [| inputlookup time_based_suppression_lookup | eval field=if(operator="or",split(field,"|"),field) | mvexpand field | eval field=split(field,"|"), value=split(value,"|"), rules=split(rules,"|") | search rules="$rule_name$" | eval combined=if(operator="or",mvmap(value,field."=\"".value."\""),mvzip(field,mvmap(value,"\"".value."\""),"=")), partial_search=if(operator="or",mvjoin(combined," OR "), mvjoin(combined," AND ")) | eval partial_search="(".partial_search.")" | stats values(partial_search) as partial_search | eval search=mvjoin(partial_search, " OR ") | eval search="(".search.")" | fields search]
args = rule_name
description = Generates search string for exclusions based on time_based_suppression_lookup.csv

[tf_rba_risk_score_override(1)]
definition = | eval rule_override= [| inputlookup rba_risk_score_override_lookup | eval id=sha1(created_time."|".operator."|".field."|".value) | eval field=if(operator="or",split(field,"|"),field) | mvexpand field | eval field=split(field,"|"), value=split(value,"|"), rules=split(rules,"|") | search rules="$rule_name$" | eval first_subnet=mvfind(value,"^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/(3[0-2]|[0-2]?[0-9])$") | eval second_subnet=mvfind(mvindex(value,first_subnet+1,-1),"^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/(3[0-2]|[0-2]?[0-9])$")+first_subnet+1 | eval cidr_indexes=mvappend(first_subnet,second_subnet) | eval cidr_fields=mvmap(cidr_indexes,mvindex(field,cidr_indexes)) | eval tmp_field=field, tmp_value=value | eval combined=if(operator="or",mvmap(value,if(match(value,"^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/(3[0-2]|[0-2]?[0-9])$"),"cidrmatch(\"".value."\",'".field."')","like(lower('".field."'),\"".value."\")")),mvzip(mvmap(field,if(field in(cidr_fields),"cidrmatch(\"".mvindex(value,tonumber(mvfind(tmp_field,field)))."\"","like(lower('".field."')")),mvmap(value,if(match(value,"^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/(3[0-2]|[0-2]?[0-9])$"),",'".mvindex(field,tonumber(mvfind(tmp_value,value)))."')",",\"".value."\")")),"")), partial_statement=if(operator="or",mvjoin(combined," OR "), mvjoin(combined," AND ")) | eval partial_statement=partial_statement.",\"".coalesce(risk_score,"10")."|".id."\"" | stats values(partial_statement) as partial_statement | eval case="case(".mvjoin(partial_statement, ",").",true(),risk_score)" | appendpipe [| stats count | where count=0 | eval case="risk_score"] | return $case] | rex field=rule_override "(?<risk_score>\d+)\|(?<tuning_entry_id>.*)" | fields - rule_override
args = rule_name


